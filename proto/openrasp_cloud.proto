syntax = "proto3";

package proto;

// Interface exported by the server.
service OpenRASP {

    // 心跳请求
    rpc HeartBeat (HeartBeatInfo) returns (HeartBeatResponse) {
    }

    // 注册agent
    rpc Register (Agent) returns (RegistrationResponse) {
    }

    // 添加 Rasp
    rpc AddRasp (Rasp) returns (AddRaspResponse) {
    }

    // 订阅升级信息推送
    rpc SubscribeUpdate (Agent) returns (stream UpdateInfo) {
    }

}

// 升级信息
message UpdateInfo {
    string id = 1;
    repeated string raspId = 5;
    PropertiesConf propertiesConf = 2;
    repeated Plugin plugins = 4;
}

// Agent信息
message Agent {
    string id = 1;
    string key = 2;
    string hostName = 6;
    string os = 8;
}

// rasp 信息
message Rasp {
    string id = 1;
    string type = 5;
    string version = 6;
    string javaVersion = 7;
    string raspHome = 8;
    uint64 startTime = 9;
}

// update 结果
message UpdateResult {
    string updateId = 1;
    bool isSuccess = 2;
    string message = 3;
}

// Agent注册返回信息
message RegistrationResponse {
    bool isSuccess = 1;
    string message = 2;
}

// 添加Rasp的返回信息
message AddRaspResponse {
    bool isSuccess = 1;
    //添加失败的话 失败信息
    string message = 2;
}

// 统计信息
message SumData {
    map<string, int64> block = 1;
    map<string, int64> info = 2;
    int64 request = 3;
    int64 hook = 4;
}

// 心跳信息
message HeartBeatInfo {
    string id = 3;
    map<string, SumData> sumData = 1;
    UpdateResult updateResult = 2;
}

// js插件
message Plugin {
    string name = 1;
    bytes content = 2;
}

// properties 配置
message PropertiesConf {
    bytes content = 1;
}

message HeartBeatResponse {
    bool isSuccess = 1;
    string message = 2;
}


